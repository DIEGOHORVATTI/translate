{"version":3,"sources":["../../../src/modules/translate/service.ts"],"sourcesContent":["import { langs, SupportedLanguage } from './shared/languages'\nimport { TranslationOptions, translatte } from './shared/translatte'\n\nimport * as z from 'zod'\n\nexport const TranslatteSchema = z.object({\n  text: z.string(),\n  to: z.enum(Object.keys(langs) as [SupportedLanguage, ...SupportedLanguage[]]),\n  from: z.enum(Object.keys(langs) as [SupportedLanguage, ...SupportedLanguage[]]).optional()\n})\n\nconst MAX_RETRIES = 3\n\nexport const serviceTranslatte = async (data: TranslationOptions) => {\n  const { text, to, from = 'auto' } = TranslatteSchema.parse(data)\n\n  let attempts = 0\n  while (attempts < MAX_RETRIES) {\n    try {\n      const translatedText = await translatte({ text, to, from })\n\n      return translatedText\n    } catch (error) {\n      attempts++\n\n      console.error(`Attempt ${attempts} failed:`, error)\n    }\n  }\n\n  return text\n}\n"],"names":["TranslatteSchema","serviceTranslatte","z","object","text","string","to","enum","Object","keys","langs","from","optional","MAX_RETRIES","data","parse","attempts","translatedText","translatte","error","console"],"mappings":";;;;;;;;;;;IAKaA,gBAAgB;eAAhBA;;IAQAC,iBAAiB;eAAjBA;;;2BAb4B;4BACM;6DAE5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,MAAMD,mBAAmBE,KAAEC,MAAM,CAAC;IACvCC,MAAMF,KAAEG,MAAM;IACdC,IAAIJ,KAAEK,IAAI,CAACC,OAAOC,IAAI,CAACC,gBAAK;IAC5BC,MAAMT,KAAEK,IAAI,CAACC,OAAOC,IAAI,CAACC,gBAAK,GAAkDE,QAAQ;AAC1F;AAEA,MAAMC,cAAc;AAEb,MAAMZ,oBAAoB,OAAOa;IACtC,MAAM,EAAEV,IAAI,EAAEE,EAAE,EAAEK,OAAO,MAAM,EAAE,GAAGX,iBAAiBe,KAAK,CAACD;IAE3D,IAAIE,WAAW;IACf,MAAOA,WAAWH,YAAa;QAC7B,IAAI;YACF,MAAMI,iBAAiB,MAAMC,IAAAA,sBAAU,EAAC;gBAAEd;gBAAME;gBAAIK;YAAK;YAEzD,OAAOM;QACT,EAAE,OAAOE,OAAO;YACdH;YAEAI,QAAQD,KAAK,CAAC,CAAC,QAAQ,EAAEH,SAAS,QAAQ,CAAC,EAAEG;QAC/C;IACF;IAEA,OAAOf;AACT"}